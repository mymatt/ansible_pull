---
- name: download and install roles
  hosts: localhost
  gather_facts: false

  vars:
    dest_folder: terraform
    s3bucket: ansibleroles
    ansible_roles: nginx
    host_function: web
    consul_agent: server
    server_ip: 0.0.0.0
    client_ip: 0.0.0.0
    reg: us-east-1

  tasks:

  - name: Gather EC2 facts.
    ec2_remote_facts:
      region: "{{ reg }}"
    register: ec2_facts

  - name: Get only running instance IP addresses.
    debug:
      msg: "Instance: {{ item.0 }} has IP address: {{ item.1 }}"
    with_together:
      - "{{ ec2_facts.instances|selectattr('state', 'equalto', 'running')|map(attribute='tags.Name')|list }}"
      - "{{ ec2_facts.instances|selectattr('state', 'equalto', 'running')|map(attribute='private_ip_address')|list }}"

  - name: get ec2 instance facts on consul server
    ec2_instance_facts:
      region: "{{ reg }}"
      filters:
        "tag:Name": consul
    register: ec2_metadata

  # - name: check ec2 sdfds
  #   debug: msg="{{ ec2_metadata.instances }}"

  - name: check ec2 ACVD
    debug:
      msg: "{{ item }}"
    with_items: "{{ ec2_metadata | map(attribute='private_ip_address') | list }}"

  - name: ec2 ip.
    debug:
      msg: "Instance: {{ item.0 }} has IP address: {{ item.1 }}"
    with_together:
      - "{{ ec2_metadata.instances|selectattr('state', 'equalto', 'running')|map(attribute='tags.Name')|list }}"
      - "{{ ec2_metadata.instances|selectattr('state', 'equalto', 'running')|map(attribute='private_ip_address')|list }}"

  - name: check ec2
    debug:
      msg: "User {{ item.key }} is {{ item.value.name }}"
    loop: "{{ lookup('ec2_metadata', users) }}"

  - name: check ec2 A
    debug: msg="{{ ec2_metadata['private_ip_address'] }}"



  - name: check ec2 B
    debug: msg="{{ ec2_metadata.instances.0.private_ip_address }}"



  - name: check ec2 A1 id
    debug: msg="{{ ec2_metadata.instances[0].id }}"

  - name: check ec2 A2
    debug:
      msg: "{{ item.private_ip_address }}"
    with_items:
      - "{{ ec2_metadata.instances }}"
  # - name: check ec2 B
  #   debug: msg="{{ ec2_metadata.instances.private_ip_address }}"

  - name: check ec2 C
    debug: msg="{{ ec2_metadata.instances[0].private_ip_address }}"

  - name: check ec2 D
    debug: msg="{{ ec2_metadata.instances[0].network_interfaces[0].private_ip_address }}"

  - name: get file from s3 bucket
    aws_s3:
      bucket: "{{ s3bucket }}"
      object: "/{{ item }}.zip"
      dest: "/{{ dest_folder }}/provisioners/{{ item }}.zip"
      mode: get
    with_items: "{{ ansible_roles }}"
    become: true

  - name: Install dependencies
    apt:
      name: "{{ packages }}"
    vars:
      packages:
        - unzip
    become: true

  - name: create folder
    file:
      path: "/{{ dest_folder }}/provisioners/roles/{{ item }}"
      state: directory
    with_items: "{{ ansible_roles }}"

  - name: unzip role
    unarchive:
      src: "/{{ dest_folder }}/provisioners/{{ item }}.zip"
      dest: "/{{ dest_folder }}/provisioners/roles/{{ item }}"
    with_items: "{{ ansible_roles }}"

  - name: delete zip files
    file:
      dest: "/{{ dest_folder }}/provisioners/{{ item }}.zip"
      state: absent
    with_items: "{{ ansible_roles }}"

  - name: wait for consul server to be running
    wait_for:
      host: "{{ ec2_metadata.private_ip_address }}"
      port: 8300
      delay: 15
      timeout: 300
      state: started
    when: consul_agent == 'client'

  - name: install consul role
    include_role:
      name: "{{ item }}"
    vars:
      agent: "{{ consul_agent }}"
      consul_server_ip: "{{ server_ip }}"
      consul_client_ip: "{{ client_ip }}"
      node_name: "{{ host_function }}"
      destination: "{{ dest_folder }}"
    with_items: "{{ ansible_roles }}"
    when: item == 'consul'

  - name: install nginx role
    include_role:
      name: "{{ item }}"
    vars:
      nginx_server_ip: "{{ client_ip }}"
      destination: "{{ dest_folder }}"
    with_items: "{{ ansible_roles }}"
    when: item == 'nginx'

  - name: install other roles
    include_role:
      name: "{{ item }}"
    vars:
      destination: "{{ dest_folder }}"
    with_items: "{{ ansible_roles }}"
    when:
      - item == 'consultemplate' or item == 'go'
